{"ast":null,"code":"var _jsxFileName = \"F:\\\\360Downloads\\\\vs2019\\\\Microsoft VS Code\\\\juejin\\\\juejin-react\\\\src\\\\componments\\\\InfiniteScroll\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ApiArt from '../ApiArt';\nimport { getArticles } from '../../fake-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THRESHOLD = 15;\n\nconst SlidingWindowScrollHook = props => {\n  _s();\n\n  const [start, setStart] = useState(0);\n  const [llist, setLlist] = useState([{\n    id: 1\n  }, {\n    id: 2\n  }, {\n    id: 3\n  }, {\n    id: 4\n  }, {\n    id: 5\n  }, {\n    id: 6\n  }, {\n    id: 7\n  }, {\n    id: 8\n  }, {\n    id: 9\n  }, {\n    id: 10\n  }, {\n    id: 11\n  }, {\n    id: 12\n  }, {\n    id: 13\n  }, {\n    id: 14\n  }, {\n    id: 15\n  }, {\n    id: 16\n  }, {\n    id: 17\n  }, {\n    id: 18\n  }, {\n    id: 19\n  }, {\n    id: 20\n  }, {\n    id: 21\n  }]);\n  const [end, setEnd] = useState(THRESHOLD);\n  const [observer, setObserver] = useState(null);\n  const $bottomElement = useRef();\n  const $topElement = useRef();\n  const iitem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const offset = 0;\n  useEffect(() => {\n    intiateScrollObserver();\n\n    async function helloAsync() {\n      const a = await getArticles(0, 'hot', offset, 10); // console.log('wait',a);\n\n      const c = [{\n        id: 1\n      }, {\n        id: 2\n      }, {\n        id: 3\n      }, {\n        id: 4\n      }, {\n        id: 5\n      }, {\n        id: 6\n      }, {\n        id: 7\n      }, {\n        id: 8\n      }, {\n        id: 9\n      }, {\n        id: 10\n      }, {\n        id: 11\n      }, {\n        id: 12\n      }, {\n        id: 13\n      }, {\n        id: 14\n      }, {\n        id: 15\n      }, {\n        id: 16\n      }, {\n        id: 17\n      }, {\n        id: 18\n      }, {\n        id: 19\n      }, {\n        id: 20\n      }, {\n        id: 21\n      }]; // const b = a.data.articles\n\n      const e = c;\n      return e;\n    }\n\n    helloAsync().then(e => {// this.setState({\n      //   art:e[0],ctime:e[2],\n      //   cateName:{\n      //     first_category_name:e[3].first_category_name,\n      //     second_category_name:e[3].second_category_name},\n      //   brief_content:e[4].brief_content,title:e[4].title,cover_image:e[4].cover_image,collect_count:e[4].collect_count,digg_count:e[4].digg_count,comment_count:e[4].comment_count,\n      //   success:true},()=>{console.log(this.state.success)}\n      // )\n      // const newLlist = e\n      // setLlist([...llist,newLlist])\n    });\n    return () => {\n      resetObservation();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [start, end]);\n\n  const intiateScrollObserver = () => {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1\n    };\n    const Observer = new IntersectionObserver(callback, options);\n    console.log($topElement);\n\n    if ($topElement.current) {// Observer.observe($topElement.current);\n    }\n\n    if ($bottomElement.current) {// Observer.observe($bottomElement.current);\n    }\n\n    setObserver(Observer);\n  };\n\n  const callback = (entries, observer) => {\n    entries.forEach((entry, index) => {\n      // const listLength = props.list.length;\n      const listLength = 45; // Scroll Down\n\n      if (entry.isIntersecting && entry.target.id === \"bottom\") {\n        const maxStartIndex = listLength - 1 - THRESHOLD; // Maximum index value `start` can take\n\n        const maxEndIndex = listLength - 1; // Maximum index value `end` can take\n\n        const newEnd = end + 10 <= maxEndIndex ? end + 10 : maxEndIndex;\n        const newStart = end - 5 <= maxStartIndex ? end - 5 : maxStartIndex;\n        setStart(newStart);\n        setEnd(newEnd);\n      } // Scroll up\n\n\n      if (entry.isIntersecting && entry.target.id === \"top\") {\n        const newEnd = end === THRESHOLD ? THRESHOLD : end - 10 > THRESHOLD ? end - 10 : THRESHOLD;\n        let newStart = start === 0 ? 0 : start - 10 > 0 ? start - 10 : 0;\n        setStart(newStart);\n        setEnd(newEnd);\n      }\n    });\n  };\n\n  const resetObservation = () => {\n    observer && observer.unobserve($bottomElement.current);\n    observer && observer.unobserve($topElement.current);\n  };\n\n  const getReference = (index, isLastIndex) => {\n    if (index === 0) return $topElement;\n    if (isLastIndex) return $bottomElement;\n    return null;\n  };\n\n  const {\n    height\n  } = props;\n  const updatedList = llist.slice(start, end);\n  console.log(updatedList);\n  const lastIndex = updatedList.length - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: updatedList.map((item, index) => {\n      const top = height * (index + start) + 'px';\n      const refVal = getReference(index, index === lastIndex);\n      const id = index === 0 ? 'top' : index === lastIndex ? 'bottom' : '';\n      return (// <li className=\"li-card\" key={item.key} style={{top}} ref={refVal} id={id}>{item.value}</li>\n        console.log(item.id) // <ApiArt iitem={item.id} key={iitem} style={{top}} ref={refVal} offset={offset}></ApiArt>\n        // <div></div>\n\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlidingWindowScrollHook, \"EgEGuucI1kC+/SJzRsZAqBo3UN8=\");\n\n_c = SlidingWindowScrollHook;\nexport { SlidingWindowScrollHook };\n\nvar _c;\n\n$RefreshReg$(_c, \"SlidingWindowScrollHook\");","map":{"version":3,"sources":["F:/360Downloads/vs2019/Microsoft VS Code/juejin/juejin-react/src/componments/InfiniteScroll/index.js"],"names":["React","useState","useEffect","useRef","ApiArt","getArticles","THRESHOLD","SlidingWindowScrollHook","props","start","setStart","llist","setLlist","id","end","setEnd","observer","setObserver","$bottomElement","$topElement","iitem","offset","intiateScrollObserver","helloAsync","a","c","e","then","resetObservation","options","root","rootMargin","threshold","Observer","IntersectionObserver","callback","console","log","current","entries","forEach","entry","index","listLength","isIntersecting","target","maxStartIndex","maxEndIndex","newEnd","newStart","unobserve","getReference","isLastIndex","height","updatedList","slice","lastIndex","length","position","map","item","top","refVal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ApiArt from '../ApiArt'\r\nimport { getArticles } from '../../fake-api';\r\n\r\nconst THRESHOLD = 15;\r\n \r\nconst SlidingWindowScrollHook = (props) =>  {\r\n  const [start, setStart] = useState(0);\r\n  const [llist, setLlist] = useState([{id:1},{id:2},{id:3},{id:4},{id:5},{id:6},{id:7},{id:8},{id:9},{id:10},{id:11},{id:12},{id:13},{id:14},{id:15},{id:16},{id:17},{id:18},{id:19},{id:20},{id:21}]);\r\n  const [end, setEnd] = useState(THRESHOLD);\r\n  const [observer, setObserver] = useState(null);\r\n  \r\n  const $bottomElement = useRef();\r\n  const $topElement = useRef();\r\n  const iitem=[0,1,2,3,4,5,6,7,8,9]; \r\n  const offset = 0;\r\n\r\n  \r\n  useEffect(() => {\r\n    intiateScrollObserver();\r\n    async function helloAsync(){\r\n    const a= await getArticles( 0, 'hot', offset , 10 );\r\n    // console.log('wait',a);\r\n    const c =[{id:1},{id:2},{id:3},{id:4},{id:5},{id:6},{id:7},{id:8},{id:9},{id:10},{id:11},{id:12},{id:13},{id:14},{id:15},{id:16},{id:17},{id:18},{id:19},{id:20},{id:21}]\r\n    // const b = a.data.articles\r\n    const e = c\r\n    return e\r\n  }\r\n  helloAsync().then((e)=>{\r\n    // this.setState({\r\n    //   art:e[0],ctime:e[2],\r\n    //   cateName:{\r\n    //     first_category_name:e[3].first_category_name,\r\n    //     second_category_name:e[3].second_category_name},\r\n    //   brief_content:e[4].brief_content,title:e[4].title,cover_image:e[4].cover_image,collect_count:e[4].collect_count,digg_count:e[4].digg_count,comment_count:e[4].comment_count,\r\n    //   success:true},()=>{console.log(this.state.success)}\r\n    // )\r\n    \r\n    // const newLlist = e\r\n    // setLlist([...llist,newLlist])\r\n  })\r\n    return () => {\r\n      resetObservation()\r\n  }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[start, end])\r\n \r\n  const intiateScrollObserver = () => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.1\r\n    };\r\n    const Observer = new IntersectionObserver(callback, options)\r\n    console.log($topElement);\r\n    if ($topElement.current) {\r\n      // Observer.observe($topElement.current);\r\n    }\r\n    if ($bottomElement.current) {\r\n      // Observer.observe($bottomElement.current);\r\n    }\r\n    setObserver(Observer)    \r\n  }\r\n \r\n  const callback = (entries, observer) => {\r\n    entries.forEach((entry, index) => {\r\n      // const listLength = props.list.length;\r\n      const listLength = 45;\r\n      // Scroll Down\r\n      if (entry.isIntersecting && entry.target.id === \"bottom\") {\r\n        const maxStartIndex = listLength - 1 - THRESHOLD;     // Maximum index value `start` can take\r\n        const maxEndIndex = listLength - 1;                   // Maximum index value `end` can take\r\n        const newEnd = (end + 10) <= maxEndIndex ? end + 10 : maxEndIndex;\r\n        const newStart = (end - 5) <= maxStartIndex ? end - 5 : maxStartIndex;\r\n        setStart(newStart)\r\n        setEnd(newEnd)\r\n      }\r\n      // Scroll up\r\n      if (entry.isIntersecting && entry.target.id === \"top\") {\r\n        const newEnd = end === THRESHOLD ? THRESHOLD : (end - 10 > THRESHOLD ? end - 10 : THRESHOLD);\r\n        let newStart = start === 0 ? 0 : (start - 10 > 0 ? start - 10 : 0);\r\n        setStart(newStart)\r\n        setEnd(newEnd)\r\n      }\r\n \r\n    });\r\n  }\r\n  const resetObservation = () => {\r\n    observer && observer.unobserve($bottomElement.current);\r\n    observer && observer.unobserve($topElement.current);\r\n  }\r\n \r\n \r\n  const getReference = (index, isLastIndex) => {\r\n    if (index === 0)\r\n      return $topElement;\r\n    if (isLastIndex) \r\n      return $bottomElement;\r\n    return null;\r\n  }\r\n \r\n  const {height} = props;\r\n  const updatedList = llist.slice(start, end);\r\n  console.log(updatedList);\r\n  const lastIndex = updatedList.length - 1;\r\n\r\n  return (\r\n    <div style={{position: 'relative'}}>\r\n      {updatedList.map((item, index) => {\r\n        const top = (height * (index + start)) + 'px';\r\n        const refVal = getReference(index, index === lastIndex);\r\n        const id = index === 0 ? 'top' : (index === lastIndex ? 'bottom' : '');\r\n        return (\r\n            // <li className=\"li-card\" key={item.key} style={{top}} ref={refVal} id={id}>{item.value}</li>\r\n            console.log(item.id)\r\n          // <ApiArt iitem={item.id} key={iitem} style={{top}} ref={refVal} offset={offset}></ApiArt>\r\n            \r\n            // <div></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport { SlidingWindowScrollHook };\r\n"]},"metadata":{},"sourceType":"module"}