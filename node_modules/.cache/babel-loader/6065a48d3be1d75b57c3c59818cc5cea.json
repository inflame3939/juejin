{"ast":null,"code":"// import React,{ Component } from 'react'\nexport default function Datetime(dateTimeStamp) {\n  var result;\n  var minute = 1000 * 60;\n  var hour = minute * 60;\n  var day = hour * 24;\n  var halfamonth = day * 15;\n  var month = day * 30;\n  var now = new Date().getTime();\n  var diffValue = now - dateTimeStamp;\n\n  if (diffValue < 0) {\n    return;\n  }\n\n  var monthC = diffValue / month;\n  var weekC = diffValue / (7 * day);\n  var dayC = diffValue / day;\n  var hourC = diffValue / hour;\n  var minC = diffValue / minute;\n\n  if (monthC >= 1) {\n    result = \"\" + parseInt(monthC) + \"月前\";\n  } else if (weekC >= 1) {\n    result = \"\" + parseInt(weekC) + \"周前\";\n  } else if (dayC >= 1) {\n    result = \"\" + parseInt(dayC) + \"天前\";\n  } else if (hourC >= 1) {\n    result = \"\" + parseInt(hourC) + \"小时前\";\n  } else if (minC >= 1) {\n    result = \"\" + parseInt(minC) + \"分钟前\";\n  } else result = \"刚刚\";\n\n  return result;\n}\n_c = Datetime;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datetime\");","map":{"version":3,"sources":["F:/360Downloads/vs2019/Microsoft VS Code/juejin/juejin-react/src/componments/Datetime/index.js"],"names":["Datetime","dateTimeStamp","result","minute","hour","day","halfamonth","month","now","Date","getTime","diffValue","monthC","weekC","dayC","hourC","minC","parseInt"],"mappings":"AAAA;AAEA,eAAe,SAASA,QAAT,CAAkBC,aAAlB,EAAgC;AAC7C,MAAIC,MAAJ;AACD,MAAIC,MAAM,GAAG,OAAO,EAApB;AACA,MAAIC,IAAI,GAAGD,MAAM,GAAG,EAApB;AACA,MAAIE,GAAG,GAAGD,IAAI,GAAG,EAAjB;AACA,MAAIE,UAAU,GAAGD,GAAG,GAAG,EAAvB;AACA,MAAIE,KAAK,GAAGF,GAAG,GAAG,EAAlB;AACA,MAAIG,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAV;AACA,MAAIC,SAAS,GAAGH,GAAG,GAAGP,aAAtB;;AACA,MAAGU,SAAS,GAAG,CAAf,EAAiB;AAAC;AAAQ;;AAC1B,MAAIC,MAAM,GAAED,SAAS,GAACJ,KAAtB;AACA,MAAIM,KAAK,GAAEF,SAAS,IAAE,IAAEN,GAAJ,CAApB;AACA,MAAIS,IAAI,GAAEH,SAAS,GAACN,GAApB;AACA,MAAIU,KAAK,GAAEJ,SAAS,GAACP,IAArB;AACA,MAAIY,IAAI,GAAEL,SAAS,GAACR,MAApB;;AACA,MAAGS,MAAM,IAAE,CAAX,EAAa;AACZV,IAAAA,MAAM,GAAC,KAAKe,QAAQ,CAACL,MAAD,CAAb,GAAwB,IAA/B;AACA,GAFD,MAGK,IAAGC,KAAK,IAAE,CAAV,EAAY;AAChBX,IAAAA,MAAM,GAAC,KAAKe,QAAQ,CAACJ,KAAD,CAAb,GAAuB,IAA9B;AACA,GAFI,MAGA,IAAGC,IAAI,IAAE,CAAT,EAAW;AACfZ,IAAAA,MAAM,GAAC,KAAIe,QAAQ,CAACH,IAAD,CAAZ,GAAoB,IAA3B;AACA,GAFI,MAGA,IAAGC,KAAK,IAAE,CAAV,EAAY;AAChBb,IAAAA,MAAM,GAAC,KAAIe,QAAQ,CAACF,KAAD,CAAZ,GAAqB,KAA5B;AACA,GAFI,MAGA,IAAGC,IAAI,IAAE,CAAT,EAAW;AACfd,IAAAA,MAAM,GAAC,KAAIe,QAAQ,CAACD,IAAD,CAAZ,GAAoB,KAA3B;AACA,GAFI,MAGLd,MAAM,GAAC,IAAP;;AACA,SAAOA,MAAP;AACA;KAhCuBF,Q","sourcesContent":["// import React,{ Component } from 'react'\r\n\r\nexport default function Datetime(dateTimeStamp){\r\n  var result;\r\n\tvar minute = 1000 * 60;\r\n\tvar hour = minute * 60;\r\n\tvar day = hour * 24;\r\n\tvar halfamonth = day * 15;\r\n\tvar month = day * 30;\r\n\tvar now = new Date().getTime();\r\n\tvar diffValue = now - dateTimeStamp;\r\n\tif(diffValue < 0){return;}\r\n\tvar monthC =diffValue/month;\r\n\tvar weekC =diffValue/(7*day);\r\n\tvar dayC =diffValue/day;\r\n\tvar hourC =diffValue/hour;\r\n\tvar minC =diffValue/minute;\r\n\tif(monthC>=1){\r\n\t\tresult=\"\" + parseInt(monthC) + \"月前\";\r\n\t}\r\n\telse if(weekC>=1){\r\n\t\tresult=\"\" + parseInt(weekC) + \"周前\";\r\n\t}\r\n\telse if(dayC>=1){\r\n\t\tresult=\"\"+ parseInt(dayC) +\"天前\";\r\n\t}\r\n\telse if(hourC>=1){\r\n\t\tresult=\"\"+ parseInt(hourC) +\"小时前\";\r\n\t}\r\n\telse if(minC>=1){\r\n\t\tresult=\"\"+ parseInt(minC) +\"分钟前\";\r\n\t}else\r\n\tresult=\"刚刚\";\r\n\treturn result;\r\n}"]},"metadata":{},"sourceType":"module"}