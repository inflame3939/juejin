{"ast":null,"code":"// import React,{ Component } from 'react'\nexport default function Datetime(timespan) {\n  var dateTime = new Date(timespan); // 将传进来的字符串或者毫秒转为标准时间\n\n  var year = dateTime.getFullYear();\n  var month = dateTime.getMonth() + 1;\n  var day = dateTime.getDate();\n  var hour = dateTime.getHours();\n  var minute = dateTime.getMinutes(); // var second = dateTime.getSeconds()\n\n  var millisecond = dateTime.getTime(); // 将当前编辑的时间转换为毫秒\n\n  var now = new Date(); // 获取本机当前的时间\n\n  var nowNew = now.getTime(); // 将本机的时间转换为毫秒\n\n  var milliseconds = 0;\n  var timeSpanStr;\n  milliseconds = nowNew - millisecond;\n\n  if (milliseconds <= 1000 * 60 * 1) {\n    // 小于一分钟展示为刚刚\n    timeSpanStr = '刚刚';\n  } else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\n    // 大于一分钟小于一小时展示为分钟\n    timeSpanStr = Math.round(milliseconds / (1000 * 60)) + '分钟前';\n  } else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\n    // 大于一小时小于一天展示为小时\n    timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\n  } else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\n    // 大于一天小于十五天展示位天\n    timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\n  } else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\n    timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\n  } else {\n    timeSpanStr = year + '' - '' + month + '' - '' + day + ' ' + hour + ':' + minute;\n  }\n\n  return timeSpanStr;\n}\n_c = Datetime;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datetime\");","map":{"version":3,"sources":["F:/360Downloads/vs2019/Microsoft VS Code/juejin/juejin-react/src/componments/Datetime/index.js"],"names":["Datetime","timespan","dateTime","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","millisecond","getTime","now","nowNew","milliseconds","timeSpanStr","Math","round"],"mappings":"AAAA;AAEA,eAAe,SAASA,QAAT,CAAmBC,QAAnB,EAA6B;AAC1C,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAf,CAD0C,CACR;;AAClC,MAAIG,IAAI,GAAGF,QAAQ,CAACG,WAAT,EAAX;AACA,MAAIC,KAAK,GAAGJ,QAAQ,CAACK,QAAT,KAAsB,CAAlC;AACA,MAAIC,GAAG,GAAGN,QAAQ,CAACO,OAAT,EAAV;AACA,MAAIC,IAAI,GAAGR,QAAQ,CAACS,QAAT,EAAX;AACA,MAAIC,MAAM,GAAGV,QAAQ,CAACW,UAAT,EAAb,CAN0C,CAO1C;;AACA,MAAIC,WAAW,GAAGZ,QAAQ,CAACa,OAAT,EAAlB,CAR0C,CAQL;;AACrC,MAAIC,GAAG,GAAG,IAAIb,IAAJ,EAAV,CAT0C,CASrB;;AACrB,MAAIc,MAAM,GAAGD,GAAG,CAACD,OAAJ,EAAb,CAV0C,CAUf;;AAC3B,MAAIG,YAAY,GAAG,CAAnB;AACA,MAAIC,WAAJ;AACAD,EAAAA,YAAY,GAAGD,MAAM,GAAGH,WAAxB;;AACA,MAAII,YAAY,IAAI,OAAO,EAAP,GAAY,CAAhC,EAAmC;AAAE;AACnCC,IAAAA,WAAW,GAAG,IAAd;AACD,GAFD,MAEO,IAAI,OAAO,EAAP,GAAY,CAAZ,GAAgBD,YAAhB,IAAgCA,YAAY,IAAI,OAAO,EAAP,GAAY,EAAhE,EAAoE;AAAE;AAC3EC,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAYH,YAAY,IAAI,OAAO,EAAX,CAAxB,IAA2C,KAAzD;AACD,GAFM,MAEA,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,CAAjB,GAAqBA,YAArB,IAAqCA,YAAY,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA1E,EAA8E;AAAE;AACrFC,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAvB,IAA8C,KAA5D;AACD,GAFM,MAEA,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsBA,YAAtB,IAAsCA,YAAY,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAAhF,EAAoF;AAAE;AAC3FC,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAvB,IAAmD,IAAjE;AACD,GAFM,MAEA,IAAIA,YAAY,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAArC,IAA2Cd,IAAI,KAAKY,GAAG,CAACX,WAAJ,EAAxD,EAA2E;AAChFc,IAAAA,WAAW,GAAGb,KAAK,GAAG,GAAR,GAAcE,GAAd,GAAoB,GAApB,GAA0BE,IAA1B,GAAiC,GAAjC,GAAuCE,MAArD;AACD,GAFM,MAEA;AACLO,IAAAA,WAAW,GAAGf,IAAI,GAAG,EAAP,GAAU,EAAV,GAAeE,KAAf,GAAuB,EAAvB,GAA0B,EAA1B,GAA+BE,GAA/B,GAAqC,GAArC,GAA2CE,IAA3C,GAAkD,GAAlD,GAAwDE,MAAtE;AACD;;AACD,SAAOO,WAAP;AACD;KA5BuBnB,Q","sourcesContent":["// import React,{ Component } from 'react'\r\n\r\nexport default function Datetime (timespan) {\r\n  var dateTime = new Date(timespan) // 将传进来的字符串或者毫秒转为标准时间\r\n  var year = dateTime.getFullYear()\r\n  var month = dateTime.getMonth() + 1\r\n  var day = dateTime.getDate()\r\n  var hour = dateTime.getHours()\r\n  var minute = dateTime.getMinutes()\r\n  // var second = dateTime.getSeconds()\r\n  var millisecond = dateTime.getTime() // 将当前编辑的时间转换为毫秒\r\n  var now = new Date() // 获取本机当前的时间\r\n  var nowNew = now.getTime() // 将本机的时间转换为毫秒\r\n  var milliseconds = 0\r\n  var timeSpanStr\r\n  milliseconds = nowNew - millisecond\r\n  if (milliseconds <= 1000 * 60 * 1) { // 小于一分钟展示为刚刚\r\n    timeSpanStr = '刚刚'\r\n  } else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) { // 大于一分钟小于一小时展示为分钟\r\n    timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前'\r\n  } else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) { // 大于一小时小于一天展示为小时\r\n    timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前'\r\n  } else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) { // 大于一天小于十五天展示位天\r\n    timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前'\r\n  } else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n    timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute\r\n  } else {\r\n    timeSpanStr = year + ''-'' + month + ''-'' + day + ' ' + hour + ':' + minute\r\n  }\r\n  return timeSpanStr\r\n}"]},"metadata":{},"sourceType":"module"}